{"version":3,"file":"static/js/92.7e6cc365.chunk.js","mappings":"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","sources":["components/Box.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport {\n  space,\n  color,\n  typography,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  space,\n  color,\n  typography,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow\n);\n","import styled from 'styled-components';\n\nexport const Spinner = styled.div``;\n","import { RotatingLines } from 'react-loader-spinner';\n\nimport { Spinner } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <Spinner>\n      <RotatingLines\n        strokeColor=\"#82919F\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"256\"\n        visible={true}\n      />\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled.button`\n  padding: 8px;\n  border-radius: 4px;\n  border: #82919f solid 1px;\n  margin-bottom: 10px;\n\n  &:hover {\n    background-color: #82919f;\n    color: #ffffff;\n  }\n`;\n\nexport const Back = styled(Link)`\n  display: flex;\n  font-size: 14px;\n  align-items: center;\n  column-gap: 10px;\n  text-decoration: none;\n  font-size: 14px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const MovieDetail = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n  padding-left: 30px;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  column-gap: 10px;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n  border-top: 1px solid #82919f;\n  border-bottom: 1px solid #82919f;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  text-decoration: none;\n`;\n\nexport const LinkAddInfo = styled(Link)`\n  text-decoration: none;\n  color: black;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\n\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\n\nimport { getMovieDetails } from 'services/api';\nimport Loader from 'components/Loader';\n\nimport {\n  Button,\n  Back,\n  MovieDetail,\n  Genres,\n  Wrapper,\n  LinkAddInfo,\n} from './MovieDetails.styled';\nimport { Box } from 'components/Box';\n\nconst MovieDetails = () => {\n  const [movieDetail, setMovieDetail] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(data => setMovieDetail(data));\n  }, [movieId]);\n\n  const {\n    original_title,\n    release_date,\n    overview,\n    genres,\n    poster_path,\n    vote_average,\n  } = movieDetail;\n\n  return (\n    <Box as=\"main\" p={12}>\n      <Button type=\"button\">\n        <Back to={location.state?.from ?? '/'}>\n          <AiOutlineArrowLeft size={16} />\n          Go back\n        </Back>\n      </Button>\n      <Box\n        as=\"div\"\n        display=\"flex\"\n        py={30}\n        mr={20}\n        borderTop=\"1px solid #82919f\"\n      >\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : `https://upload.wikimedia.org/wikipedia/commons/b/ba/No_image_available_400_x_600.svg`\n          }\n          alt=\"title\"\n          width={240}\n          height={360}\n          loading=\"lazy\"\n        />\n        <MovieDetail>\n          <h2>\n            {original_title}&nbsp;({new Date(release_date).getFullYear()})\n          </h2>\n          <p>\n            User Score: &nbsp;\n            {Math.round(vote_average * 10)}%\n          </p>\n          <h4>Overview</h4>\n          <p>{overview} </p>\n          <h4>Genres</h4>\n          <Genres>\n            {genres &&\n              genres.length &&\n              genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n          </Genres>\n        </MovieDetail>\n      </Box>\n      <Wrapper>\n        <h4>Additional information</h4>\n        <LinkAddInfo to=\"cast\" state={{ ...location.state }}>\n          Cast\n        </LinkAddInfo>\n        <LinkAddInfo to=\"reviews\" state={{ ...location.state }}>\n          Reviews\n        </LinkAddInfo>\n      </Wrapper>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Box>\n  );\n};\n\nMovieDetails.propTypes = {\n  movieDetail: PropTypes.arrayOf(\n    PropTypes.shape({\n      original_title: PropTypes.string.isRequired,\n      release_date: PropTypes.number.isRequired,\n      overview: PropTypes.string.isRequired,\n      genres: PropTypes.array.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '5968db72ea451807fee259e98f2e91a5';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["Box","styled","space","color","typography","layout","flexbox","grid","background","border","position","shadow","Spinner","strokeColor","strokeWidth","animationDuration","width","visible","Button","Back","Link","MovieDetail","Genres","Wrapper","LinkAddInfo","useState","movieDetail","setMovieDetail","movieId","useParams","location","useLocation","useEffect","getMovieDetails","then","data","original_title","release_date","overview","genres","poster_path","vote_average","as","p","type","to","state","from","size","display","py","mr","borderTop","src","alt","height","loading","Date","getFullYear","Math","round","length","map","id","name","Suspense","fallback","Loader","axios","API_KEY","getTrendingMovies","response","searchMovies","query","getMovieCast","getMovieReviews"],"sourceRoot":""}