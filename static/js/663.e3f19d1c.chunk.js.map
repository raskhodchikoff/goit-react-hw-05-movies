{"version":3,"file":"static/js/663.e3f19d1c.chunk.js","mappings":"yOAEaA,E,QAAOC,GAAAA,GAAH,8H,SCgDjB,EA1Ca,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAQM,EAAKP,KAAjB,GAChC,GAAE,CAACE,KAGF,SAACL,EAAD,UACGG,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,2BACE,gBACEC,IACEH,EAAY,yCAC0BA,GAD1B,uFAIdI,IAAI,QACJC,MAAO,IACPC,OAAQ,IACRC,QAAQ,UAEV,uBAAIN,KACJ,uCAAeC,OAbRH,EADD,KAmBf,C,mMCnCDS,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,GAAAA,IAAA,qCAAwCC,IADhC,cACzBE,EADyB,yBAExBA,EAASd,MAFe,2CAAH,qDAKjBe,EAAY,mCAAG,WAAMC,GAAN,uFACHL,EAAAA,GAAAA,IAAA,6BACCK,EADD,oBACkBJ,EADlB,+CADG,cACpBE,EADoB,yBAInBA,EAASd,MAJU,2CAAH,sDAOZiB,EAAe,mCAAG,WAAMf,GAAN,uFACNS,EAAAA,GAAAA,IAAA,gBACZT,EADY,oBACEU,EADF,oBADM,cACvBE,EADuB,yBAItBA,EAASd,MAJa,2CAAH,sDAOfF,EAAY,mCAAG,WAAMI,GAAN,uFACHS,EAAAA,GAAAA,IAAA,gBACZT,EADY,4BACUU,EADV,oBADG,cACpBE,EADoB,yBAInBA,EAASd,MAJU,2CAAH,sDAOZkB,EAAe,mCAAG,WAAMhB,GAAN,uFACNS,EAAAA,GAAAA,IAAA,gBACZT,EADY,4BACUU,EADV,2BADM,cACvBE,EADuB,yBAItBA,EAASd,MAJa,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 30px;\n  padding-top: 10px;\n  color: black;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n// import PropTypes from 'prop-types';\n\nimport { getMovieCast } from 'services/api';\n\nimport { List } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId).then(data => setCast(data.cast));\n  }, [movieId]);\n\n  return (\n    <List>\n      {cast.map(({ id, profile_path, name, character }) => (\n        <li key={id}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                : `https://upload.wikimedia.org/wikipedia/commons/b/ba/No_image_available_400_x_600.svg`\n            }\n            alt=\"title\"\n            width={140}\n            height={200}\n            loading=\"lazy\"\n          />\n          <p>{name}</p>\n          <p>Character: {character}</p>\n        </li>\n      ))}\n    </List>\n  );\n};\n\n// Cast.propTypes = {\n//   cast: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       profile_path: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       character: PropTypes.string.isRequired,\n//     })\n//   ),\n// };\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '5968db72ea451807fee259e98f2e91a5';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["List","styled","useState","cast","setCast","movieId","useParams","useEffect","getMovieCast","then","data","map","id","profile_path","name","character","src","alt","width","height","loading","axios","API_KEY","getTrendingMovies","response","searchMovies","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}